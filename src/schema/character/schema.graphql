extend type Query {
  character(id: ID!): CharacterNode
}

interface CharacterNode {
  id: ID!
  mostRelatedCharacter: CharacterNode
  relatedCharacters: [CharacterNode!]!
}

interface MainCharacter {
  screenName: String!
}

type Wizard implements CharacterNode & MainCharacter {
  id: ID!
  mostRelatedCharacter: CharacterNode
  relatedCharacters: [CharacterNode!]!
  screenName: String!
  spells: [String!]!
}

type Fighter implements CharacterNode & MainCharacter {
  id: ID!
  mostRelatedCharacter: CharacterNode
  relatedCharacters: [CharacterNode!]!
  screenName: String!
  powerLevel: Int!
}

type ExtraCharacter implements CharacterNode {
  id: ID!
  mostRelatedCharacter: CharacterNode
  relatedCharacters: [CharacterNode!]!
  creditName: String!
}
