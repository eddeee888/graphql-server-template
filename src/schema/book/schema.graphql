extend type Query {
  book(id: ID!): BookResult!
  books(input: PaginationInput!): BooksResult!
}

extend type Mutation {
  createBook(input: CreateBookInput!): CreateBookResult!
  updateBook(input: UpdateBookInput!): UpdateBookResult!
}

type Book {
  id: ID!
  isbn: String!
  nextBookInSeries: Book
  previousBookInSeries: Book
}

type BookResultOk {
  result: Book
}

union BookResult = BookResultOk | ResultError

type BooksResultOk {
  result: [Book!]!
  pagination: Pagination!
}

union BooksResult = BooksResultOk | ResultError

input CreateBookInput {
  isbn: String!
}

type CreateBookResultOk {
  result: Book!
}

union CreateBookResult = CreateBookResultOk | ResultError

input UpdateBookInput {
  id: ID!
  isbn: String!
}

type UpdateBookResultOk {
  result: Book!
}

union UpdateBookResult = UpdateBookResultOk | ResultError

extend type User {
  booksRead: [Book!]!
}
