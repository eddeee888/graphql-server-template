extend type Query {
  book(id: ID!): BookPayload!
  books(input: PaginationInput!): BooksPayload!
  readable(id: ID!): Readable
}

type Book {
  id: ID!
  isbn: String!
}

type BookResult {
  result: Book
}

union BookPayload = BookResult | PayloadError

type BooksResult {
  result: [Book!]!
  pagination: Pagination!
}

union BooksPayload = BooksResult | PayloadError

type ShortNovel {
  id: ID!
  summary: String!
}

type Magazine {
  id: ID!
  issueNumber: Int!
}

union Readable = ShortNovel | Magazine

extend type User {
  booksRead: [Book!]!
}
